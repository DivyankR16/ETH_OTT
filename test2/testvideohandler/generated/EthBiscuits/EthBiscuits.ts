// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class DisLiked extends ethereum.Event {
  get params(): DisLiked__Params {
    return new DisLiked__Params(this);
  }
}

export class DisLiked__Params {
  _event: DisLiked;

  constructor(event: DisLiked) {
    this._event = event;
  }

  get dislikes(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Liked extends ethereum.Event {
  get params(): Liked__Params {
    return new Liked__Params(this);
  }
}

export class Liked__Params {
  _event: Liked;

  constructor(event: Liked) {
    this._event = event;
  }

  get likes(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Subscribed extends ethereum.Event {
  get params(): Subscribed__Params {
    return new Subscribed__Params(this);
  }
}

export class Subscribed__Params {
  _event: Subscribed;

  constructor(event: Subscribed) {
    this._event = event;
  }

  get subscribe(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class TransferBatch extends ethereum.Event {
  get params(): TransferBatch__Params {
    return new TransferBatch__Params(this);
  }
}

export class TransferBatch__Params {
  _event: TransferBatch;

  constructor(event: TransferBatch) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get values(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }
}

export class TransferSingle extends ethereum.Event {
  get params(): TransferSingle__Params {
    return new TransferSingle__Params(this);
  }
}

export class TransferSingle__Params {
  _event: TransferSingle;

  constructor(event: TransferSingle) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get value(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class URI extends ethereum.Event {
  get params(): URI__Params {
    return new URI__Params(this);
  }
}

export class URI__Params {
  _event: URI;

  constructor(event: URI) {
    this._event = event;
  }

  get value(): string {
    return this._event.parameters[0].value.toString();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class VideoUploaded extends ethereum.Event {
  get params(): VideoUploaded__Params {
    return new VideoUploaded__Params(this);
  }
}

export class VideoUploaded__Params {
  _event: VideoUploaded;

  constructor(event: VideoUploaded) {
    this._event = event;
  }

  get VideoURI(): string {
    return this._event.parameters[0].value.toString();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get discription(): string {
    return this._event.parameters[2].value.toString();
  }

  get owner(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get duration(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get gaming(): boolean {
    return this._event.parameters[5].value.toBoolean();
  }

  get movies(): boolean {
    return this._event.parameters[6].value.toBoolean();
  }

  get music(): boolean {
    return this._event.parameters[7].value.toBoolean();
  }

  get comedy(): boolean {
    return this._event.parameters[8].value.toBoolean();
  }

  get action(): boolean {
    return this._event.parameters[9].value.toBoolean();
  }

  get education(): boolean {
    return this._event.parameters[10].value.toBoolean();
  }
}

export class EthBiscuits__getALLVideosResultValue0Struct extends ethereum.Tuple {
  get VideoURI(): string {
    return this[0].toString();
  }

  get name(): string {
    return this[1].toString();
  }

  get discription(): string {
    return this[2].toString();
  }

  get owner(): Address {
    return this[3].toAddress();
  }

  get views(): BigInt {
    return this[4].toBigInt();
  }

  get likes(): BigInt {
    return this[5].toBigInt();
  }

  get dislikes(): BigInt {
    return this[6].toBigInt();
  }

  get duration(): BigInt {
    return this[7].toBigInt();
  }

  get gaming(): boolean {
    return this[8].toBoolean();
  }

  get movies(): boolean {
    return this[9].toBoolean();
  }

  get music(): boolean {
    return this[10].toBoolean();
  }

  get comedy(): boolean {
    return this[11].toBoolean();
  }

  get action(): boolean {
    return this[12].toBoolean();
  }

  get education(): boolean {
    return this[13].toBoolean();
  }
}

export class EthBiscuits__getUserVideoResultValue0Struct extends ethereum.Tuple {
  get VideoURI(): string {
    return this[0].toString();
  }

  get name(): string {
    return this[1].toString();
  }

  get discription(): string {
    return this[2].toString();
  }

  get owner(): Address {
    return this[3].toAddress();
  }

  get views(): BigInt {
    return this[4].toBigInt();
  }

  get likes(): BigInt {
    return this[5].toBigInt();
  }

  get dislikes(): BigInt {
    return this[6].toBigInt();
  }

  get duration(): BigInt {
    return this[7].toBigInt();
  }

  get gaming(): boolean {
    return this[8].toBoolean();
  }

  get movies(): boolean {
    return this[9].toBoolean();
  }

  get music(): boolean {
    return this[10].toBoolean();
  }

  get comedy(): boolean {
    return this[11].toBoolean();
  }

  get action(): boolean {
    return this[12].toBoolean();
  }

  get education(): boolean {
    return this[13].toBoolean();
  }
}

export class EthBiscuits__viewUserResultValue0Struct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get useraddress(): Address {
    return this[1].toAddress();
  }

  get subscribe(): BigInt {
    return this[2].toBigInt();
  }

  get videoID(): Array<BigInt> {
    return this[3].toBigIntArray();
  }
}

export class EthBiscuits__viewVideoResultValue0Struct extends ethereum.Tuple {
  get VideoURI(): string {
    return this[0].toString();
  }

  get name(): string {
    return this[1].toString();
  }

  get discription(): string {
    return this[2].toString();
  }

  get owner(): Address {
    return this[3].toAddress();
  }

  get views(): BigInt {
    return this[4].toBigInt();
  }

  get likes(): BigInt {
    return this[5].toBigInt();
  }

  get dislikes(): BigInt {
    return this[6].toBigInt();
  }

  get duration(): BigInt {
    return this[7].toBigInt();
  }

  get gaming(): boolean {
    return this[8].toBoolean();
  }

  get movies(): boolean {
    return this[9].toBoolean();
  }

  get music(): boolean {
    return this[10].toBoolean();
  }

  get comedy(): boolean {
    return this[11].toBoolean();
  }

  get action(): boolean {
    return this[12].toBoolean();
  }

  get education(): boolean {
    return this[13].toBoolean();
  }
}

export class EthBiscuits extends ethereum.SmartContract {
  static bind(address: Address): EthBiscuits {
    return new EthBiscuits("EthBiscuits", address);
  }

  automatedPopularityMaker(_VideoId: BigInt): BigInt {
    let result = super.call(
      "automatedPopularityMaker",
      "automatedPopularityMaker(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_VideoId)]
    );

    return result[0].toBigInt();
  }

  try_automatedPopularityMaker(_VideoId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "automatedPopularityMaker",
      "automatedPopularityMaker(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_VideoId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOf(account: Address, id: BigInt): BigInt {
    let result = super.call(
      "balanceOf",
      "balanceOf(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(id)
      ]
    );

    return result[0].toBigInt();
  }

  try_balanceOf(account: Address, id: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "balanceOf",
      "balanceOf(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(id)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOfBatch(accounts: Array<Address>, ids: Array<BigInt>): Array<BigInt> {
    let result = super.call(
      "balanceOfBatch",
      "balanceOfBatch(address[],uint256[]):(uint256[])",
      [
        ethereum.Value.fromAddressArray(accounts),
        ethereum.Value.fromUnsignedBigIntArray(ids)
      ]
    );

    return result[0].toBigIntArray();
  }

  try_balanceOfBatch(
    accounts: Array<Address>,
    ids: Array<BigInt>
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "balanceOfBatch",
      "balanceOfBatch(address[],uint256[]):(uint256[])",
      [
        ethereum.Value.fromAddressArray(accounts),
        ethereum.Value.fromUnsignedBigIntArray(ids)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  checkbalance(user: Address): BigInt {
    let result = super.call("checkbalance", "checkbalance(address):(uint256)", [
      ethereum.Value.fromAddress(user)
    ]);

    return result[0].toBigInt();
  }

  try_checkbalance(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "checkbalance",
      "checkbalance(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getALLVideos(): Array<EthBiscuits__getALLVideosResultValue0Struct> {
    let result = super.call(
      "getALLVideos",
      "getALLVideos():((string,string,string,address,uint256,uint256,uint256,uint256,bool,bool,bool,bool,bool,bool)[])",
      []
    );

    return result[0].toTupleArray<
      EthBiscuits__getALLVideosResultValue0Struct
    >();
  }

  try_getALLVideos(): ethereum.CallResult<
    Array<EthBiscuits__getALLVideosResultValue0Struct>
  > {
    let result = super.tryCall(
      "getALLVideos",
      "getALLVideos():((string,string,string,address,uint256,uint256,uint256,uint256,bool,bool,bool,bool,bool,bool)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<EthBiscuits__getALLVideosResultValue0Struct>()
    );
  }

  getUserVideo(
    user: Address
  ): Array<EthBiscuits__getUserVideoResultValue0Struct> {
    let result = super.call(
      "getUserVideo",
      "getUserVideo(address):((string,string,string,address,uint256,uint256,uint256,uint256,bool,bool,bool,bool,bool,bool)[])",
      [ethereum.Value.fromAddress(user)]
    );

    return result[0].toTupleArray<
      EthBiscuits__getUserVideoResultValue0Struct
    >();
  }

  try_getUserVideo(
    user: Address
  ): ethereum.CallResult<Array<EthBiscuits__getUserVideoResultValue0Struct>> {
    let result = super.tryCall(
      "getUserVideo",
      "getUserVideo(address):((string,string,string,address,uint256,uint256,uint256,uint256,bool,bool,bool,bool,bool,bool)[])",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<EthBiscuits__getUserVideoResultValue0Struct>()
    );
  }

  isApprovedForAll(account: Address, operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(operator)
      ]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    account: Address,
    operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(operator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  popularity(_VideoId: BigInt): BigInt {
    let result = super.call("popularity", "popularity(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_VideoId)
    ]);

    return result[0].toBigInt();
  }

  try_popularity(_VideoId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("popularity", "popularity(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_VideoId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  uri(param0: BigInt): string {
    let result = super.call("uri", "uri(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toString();
  }

  try_uri(param0: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("uri", "uri(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  viewUser(user: Address): EthBiscuits__viewUserResultValue0Struct {
    let result = super.call(
      "viewUser",
      "viewUser(address):((string,address,uint256,uint256[]))",
      [ethereum.Value.fromAddress(user)]
    );

    return changetype<EthBiscuits__viewUserResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_viewUser(
    user: Address
  ): ethereum.CallResult<EthBiscuits__viewUserResultValue0Struct> {
    let result = super.tryCall(
      "viewUser",
      "viewUser(address):((string,address,uint256,uint256[]))",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<EthBiscuits__viewUserResultValue0Struct>(value[0].toTuple())
    );
  }

  viewVideo(_id: BigInt): EthBiscuits__viewVideoResultValue0Struct {
    let result = super.call(
      "viewVideo",
      "viewVideo(uint256):((string,string,string,address,uint256,uint256,uint256,uint256,bool,bool,bool,bool,bool,bool))",
      [ethereum.Value.fromUnsignedBigInt(_id)]
    );

    return changetype<EthBiscuits__viewVideoResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_viewVideo(
    _id: BigInt
  ): ethereum.CallResult<EthBiscuits__viewVideoResultValue0Struct> {
    let result = super.tryCall(
      "viewVideo",
      "viewVideo(uint256):((string,string,string,address,uint256,uint256,uint256,uint256,bool,bool,bool,bool,bool,bool))",
      [ethereum.Value.fromUnsignedBigInt(_id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<EthBiscuits__viewVideoResultValue0Struct>(value[0].toTuple())
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AuthorityChangeCall extends ethereum.Call {
  get inputs(): AuthorityChangeCall__Inputs {
    return new AuthorityChangeCall__Inputs(this);
  }

  get outputs(): AuthorityChangeCall__Outputs {
    return new AuthorityChangeCall__Outputs(this);
  }
}

export class AuthorityChangeCall__Inputs {
  _call: AuthorityChangeCall;

  constructor(call: AuthorityChangeCall) {
    this._call = call;
  }

  get newowner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get videoId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AuthorityChangeCall__Outputs {
  _call: AuthorityChangeCall;

  constructor(call: AuthorityChangeCall) {
    this._call = call;
  }
}

export class DisLikeCall extends ethereum.Call {
  get inputs(): DisLikeCall__Inputs {
    return new DisLikeCall__Inputs(this);
  }

  get outputs(): DisLikeCall__Outputs {
    return new DisLikeCall__Outputs(this);
  }
}

export class DisLikeCall__Inputs {
  _call: DisLikeCall;

  constructor(call: DisLikeCall) {
    this._call = call;
  }

  get _VideoId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DisLikeCall__Outputs {
  _call: DisLikeCall;

  constructor(call: DisLikeCall) {
    this._call = call;
  }
}

export class LikeCall extends ethereum.Call {
  get inputs(): LikeCall__Inputs {
    return new LikeCall__Inputs(this);
  }

  get outputs(): LikeCall__Outputs {
    return new LikeCall__Outputs(this);
  }
}

export class LikeCall__Inputs {
  _call: LikeCall;

  constructor(call: LikeCall) {
    this._call = call;
  }

  get _VideoId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LikeCall__Outputs {
  _call: LikeCall;

  constructor(call: LikeCall) {
    this._call = call;
  }
}

export class RegisterUSerCall extends ethereum.Call {
  get inputs(): RegisterUSerCall__Inputs {
    return new RegisterUSerCall__Inputs(this);
  }

  get outputs(): RegisterUSerCall__Outputs {
    return new RegisterUSerCall__Outputs(this);
  }
}

export class RegisterUSerCall__Inputs {
  _call: RegisterUSerCall;

  constructor(call: RegisterUSerCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class RegisterUSerCall__Outputs {
  _call: RegisterUSerCall;

  constructor(call: RegisterUSerCall) {
    this._call = call;
  }
}

export class SafeBatchTransferFromCall extends ethereum.Call {
  get inputs(): SafeBatchTransferFromCall__Inputs {
    return new SafeBatchTransferFromCall__Inputs(this);
  }

  get outputs(): SafeBatchTransferFromCall__Outputs {
    return new SafeBatchTransferFromCall__Outputs(this);
  }
}

export class SafeBatchTransferFromCall__Inputs {
  _call: SafeBatchTransferFromCall;

  constructor(call: SafeBatchTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get values(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SafeBatchTransferFromCall__Outputs {
  _call: SafeBatchTransferFromCall;

  constructor(call: SafeBatchTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get id(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SubscribeCall extends ethereum.Call {
  get inputs(): SubscribeCall__Inputs {
    return new SubscribeCall__Inputs(this);
  }

  get outputs(): SubscribeCall__Outputs {
    return new SubscribeCall__Outputs(this);
  }
}

export class SubscribeCall__Inputs {
  _call: SubscribeCall;

  constructor(call: SubscribeCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SubscribeCall__Outputs {
  _call: SubscribeCall;

  constructor(call: SubscribeCall) {
    this._call = call;
  }
}

export class UploadVideoCall extends ethereum.Call {
  get inputs(): UploadVideoCall__Inputs {
    return new UploadVideoCall__Inputs(this);
  }

  get outputs(): UploadVideoCall__Outputs {
    return new UploadVideoCall__Outputs(this);
  }
}

export class UploadVideoCall__Inputs {
  _call: UploadVideoCall;

  constructor(call: UploadVideoCall) {
    this._call = call;
  }

  get _VideoURI(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _duration(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _name(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _description(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _gaming(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }

  get _movies(): boolean {
    return this._call.inputValues[5].value.toBoolean();
  }

  get _music(): boolean {
    return this._call.inputValues[6].value.toBoolean();
  }

  get _comedy(): boolean {
    return this._call.inputValues[7].value.toBoolean();
  }

  get _action(): boolean {
    return this._call.inputValues[8].value.toBoolean();
  }

  get _education(): boolean {
    return this._call.inputValues[9].value.toBoolean();
  }
}

export class UploadVideoCall__Outputs {
  _call: UploadVideoCall;

  constructor(call: UploadVideoCall) {
    this._call = call;
  }
}

export class ViewUpdateCall extends ethereum.Call {
  get inputs(): ViewUpdateCall__Inputs {
    return new ViewUpdateCall__Inputs(this);
  }

  get outputs(): ViewUpdateCall__Outputs {
    return new ViewUpdateCall__Outputs(this);
  }
}

export class ViewUpdateCall__Inputs {
  _call: ViewUpdateCall;

  constructor(call: ViewUpdateCall) {
    this._call = call;
  }

  get _VideoId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ViewUpdateCall__Outputs {
  _call: ViewUpdateCall;

  constructor(call: ViewUpdateCall) {
    this._call = call;
  }
}
